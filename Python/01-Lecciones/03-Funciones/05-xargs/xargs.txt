Tema 23: *args en Funciones
En Python, *args se utiliza en la definición de una función para permitir que acepte un número variable de argumentos 
posicionales. Aunque internamente *args recopila los argumentos adicionales en una tupla (esto lo veremos más adelante
en el tema tuplas), la idea principal es que puedes pasar cualquier cantidad de argumentos a la función sin necesidad 
de especificar cada uno individualmente en la definición de la función.

Características Principales de *args:
Flexibilidad en Número de Argumentos: Una función puede aceptar cualquier cantidad de argumentos posicionales 
gracias a *args.

Uso en la Función: Dentro de la función, tratas *args como una colección de argumentos sobre los cuales puedes iterar.

Ejemplos Simplificados
Dado el contexto de y avance de nuestro curso, aquí hay ejemplos simplificados que muestran el uso de *args 

1.- *Función con args:

def imprimir_valores(*valores):
    for valor in valores:
        print(valor)

imprimir_valores(10, 20, 30, 40)  # Imprime cada número en una línea nueva

Este ejemplo demuestra cómo *args permite pasar múltiples argumentos a una función.


2.- *Sumar Números con args:

def sumar(*numeros):
    total = 0
    for numero in numeros:
        total += numero
    print("Total:", total)

sumar(5, 10, 15)  # Imprime la suma de los números


Ejercicios

Fácil: Escribe una función mostrar_mensajes que use *args para aceptar varios mensajes como argumentos y los imprima 
uno tras otro.

Medio: Define una función multiplicar_numeros que utilice *args para recibir varios números y calcule el producto de 
todos ellos. Imprime el resultado.

Difícil: Crea una función min_max que utilice *args para tomar varios números y luego imprima el menor y el mayor de 
esos números.